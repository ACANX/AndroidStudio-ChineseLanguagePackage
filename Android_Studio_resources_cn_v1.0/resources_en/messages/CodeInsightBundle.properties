#author: 2483808264@qq.com
#Fri Dec 12 08:20:43 CST 2014
intention.implement.abstract.class.default.text=Implement Abstract Class
dialog.create.field.from.parameter.field.name.label=Name\:
javadoc.action.view.external=View External Documentation
javadoc.documentation.not.found.title=No Documentation
unwrap.while=Unwrap 'while...'
livetemplate.description.itar=Iterate elements of array
rename.file.reference.family=Rename File Reference
status.bar.highlighted.usages.not.found.message=No usages of {0} found
generate.equals.compare.nested.arrays.comment=// Compare nested arrays - values of {0} here
i18nize.empty.file.path=Please specify properties file path
livetemplate.description.toar=Stores elements of java.util.Collection into array
insert.code.template.command=Insert Code Template
surround.with.runtime.type.template=((RuntimeType)expr)
unwrap.braces=Unwrap braces
intentions.category.ejb=EJB
surround.with.try.catch.template=try / catch
livetemplate.description.surround.braces=Surround with {}
node.abstract.flag.tooltip=Abstract
macro.current.package=currentPackage()
intention.create.test.dialog.java=Java
templates.no.defined.with.prefix=No templates starting with ''{0}'' defined in this context
reformat.progress.common.text=Reformatting code...
xml.tag.info.no.attributes=<no attributes>
deannotate.intention.action.text=Deannotate
livetemplate.description.sout=Prints a string to System.out
dialog.edit.template.checkbox.xml=&XML
intention.assign.field.from.parameter.text=Assign Parameter to Field ''{0}''
livetemplate.description.surround.parens=Surround with ()
intention.invert.if.condition=Invert If Condition
template.shortcut.space=Space
intention.settings=Intentions
i18n.quickfix.code.panel.title=Java Code Info
livetemplate.description.souf=Prints a formatted string to System.out
macro.qualified.class.name=qualifiedClassName()
reformat.option.vcs.changed.region=Only &VCS changed text
dialog.intention.settings.description.panel.title=Description
dialog.reformat.files.optimize.imports.checkbox=&Optimize imports
error.cannot.resolve.class=Cannot resolve class ''{0}''
intention.replace.cast.with.var.text=Replace ''{0}'' with ''{1}''
i18nize.dialog.error.property.already.defined.message=Property ''{0}'' already exists in the file ''{1}''
macro.descendant.classes.enum=descendantClassesEnum(String)
i18n.quickfix.property.panel.update.all.files.in.bundle.checkbox=Update all properties files in &Resource bundle
javadoc.method.in.class={0} in class {1}
highlight.imported.members.chooser.title=Choose Imported Members to Highlight
quickfix.i18n.concatentation=I18nize string concatenation containing hard coded string literal
intention.extract.if.condition.text=Extract if ({0})
macro.suggest.index.name=suggestIndexName()
dialog.edit.template.checkbox.html=&HTML
implementation.view.title=Definition of {0}
surround.with.dowhile.template=do / while
javadoc.type.parameters=Type parameters\:
rename.file.reference.text=Rename File Reference to {0}
quickfix.i18n.concatentation.error=String concatenation not found
copy.abstract.method.no.existing.implementations.found=No existing implementations found
intention.add.override.annotation.family=Add Override Annotation
node.interface.tooltip=Interface
templates.select.template.chooser.title=Select Template
intention.break.string.on.line.breaks.text=Break string on '\n'
intention.create.test.dialog.language=Language\:
goto.test.notFound=No test subjects found
templates.dialog.shortcut.chooser.label=By default expand with
command.name.typing=Typing
inspection.i18n.option.ignore.comment.pattern=Ignore lines containing this comment (pattern in java.util.Pattern format)\:
javadoc.info.title=Documentation for {0}
inspection.i18n.option.ignore.nonalphanumerics=Ignore literals which do not contain alphabetic characters
i18nize.error.title=Cannot I18nize Selection
powered.by.plugin=''{0}'' plugin.
dialog.edit.template.checkbox.reformat.according.to.style=&Reformat according to style
dialog.intention.settings.intention.list.title=Intention List
macro.cast.to.left.side.type=castToLeftSideType()
templates.settings.page.title=Live Templates
intention.split.declaration.text=Split into separate declarations
error.cannot.resolve.0.1=Cannot resolve {0} ''{1}''
unwrap.array.initializer=Unwrap array initializer
dialog.create.field.from.parameter.title=Create Field
generate.setter.fields.chooser.title=Select Fields to Generate Setters
goto.implementation.notFound=No implementations found
progress.text.optimizing.imports=Optimizing imports...
unwrap.synchronized=Unwrap 'synchronized...'
generate.equals.compare.arrays.comment=// Probably incorrect - comparing Object[] arrays with Arrays.equals
inspection.i18n.quickfix.annotate.element.as=Annotate {0} ''{1}'' as @{2}
reformat.code.accept.button.text=\u8FD0\u884C
macro.undescoresToCamelCase.string=underscoresToCamelCase(String)
templates.dialog.edit.variables.table.column.default.value=Default value
node.exception.tooltip=Exception
node.enum.tooltip=Enum
inspection.i18n.option.ignore.for.exception.constructor.arguments=Ignore for exception constructor arguments\:
livetemplate.description.psfs=public static final String
set.language.level.to.0=Set language level to {0}
reformat.and.optimize.progress.common.text=Preparing imports...
livetemplate.description.itve=Iterate elements of java.util.Vector
intention.create.test.dialog.choose.super.class=Choose Superclass
macro.file.name.without.extension=fileNameWithoutExtension()
javadoc.since=Since\:
error.unknown.enum.value.message=Unknown enum value ''{0}''
intention.override.method.text=Override method ''{0}''
livetemplate.description.ittok=Iterate tokens from String
inspection.i18n.option.ignore.tostring=Ignore contents of toString() method
paste.data.flavor.folding=FoldingData
livetemplate.description.psfi=public static final int
inspection.i18n.quickfix=I18nize hard coded string literal
intention.create.test.dialog.class.name=Class name\:
static.class.initializer={0}class initializer
intention.add.annotation.family=Add Annotation
livetemplate.description.surround.cdata.in.xmlorhtmlorjsp=Surround with CDATA section
no.documentation.found=No documentation found.
coverage.button.add.package=Add Package
intention.implement.abstract.class.interface.text=Implement Interface
goto.test.findUsages.subject.title=Test Subjects for {0}
intention.assign.field.from.parameter.family=Assign Parameter to Field
i18nize.error.message=You can only i18nize Java string literal or substring thereof.\nPlease point the caret inside Java string literal or select part of it.
i18nize.jsp.error=Please select JSP text to I18nize.\nMake sure you have not selected any scriptlets, custom tags or other foreign languages elements.\nAlso, HTML tags inside selection must be balanced.
create.directory.text=Create Directory {0}
livetemplate.description.surround.tag.in.htmlorjsp=Surround with <tag></tag> in HTML/JSP
rename.element.family=Rename Element
override.implement.broken.file.template.title=File Template Error
highlight.exceptions.thrown.chooser.title=Choose Exception Classes to Highlight
coverage.pattern.filter.editor.choose.package.title=Choose Package
error.attempt.to.generate.constructor.for.anonymous.class=Cannot add constructor to an anonymous class
livetemplate.description.soutv=Prints a value to System.out
title.remove.coverage.data=Remove Coverage Data
livetemplate.description.if.not.null=Inserts ''if not null'' statement
livetemplate.description.thr=throw new
rename.named.element.text=Rename ''{0}'' to ''{1}''
livetemplate.description.soutp=Prints method parameter names and values to System.out
livetemplate.description.soutm=Prints current class and method names to System.out
generate.equals.hashcode.internal.error=Internal error
dialog.paste.on.import.text=<html>The code fragment which you have pasted uses classes that are not accessible by imports in the new context.<br/>Select classes that you want to import to the new file.</html>
javadoc.external.fetch.error.message=Cannot fetch remote documentation\: {0}
macro.firstWord.string=firstWord(String)
process.scope.directory=Directory ''{0}''
intention.intercept.ejb.method.or.class.method.text=Add interceptor for business method ''{0}''
templates.dialog.edit.variables.action.move.down=Move &Down
intention.implement.abstract.method.searching.for.descendants.progress=Searching For Descendants...
generate.getter.fields.chooser.title=Select Fields to Generate Getters
progress.reformat.stage.processing.blocks=Calculating changes...
intention.underscores.in.literals.family=Underscores in numeric literals
generate.equals.and.hashcode.already.defined.warning=Methods ''boolean equals(Object)'' and ''int hashCode()'' are already defined\nfor class {0}. Do you want to delete them and proceed?
deannotate.intention.chooser.title=Choose annotation to delete
livetemplate.description.lazy=Performs lazy initialization
node.final.flag.tooltip=Final
macro.variable.of.type=variableOfType(Type)
surround.with.for.template=for
templates.surround.no.defined=No surround templates defined in this context
dialog.import.on.paste.title2=Select Elements to Import
templates.dialog.table.column.active=Active
intention.split.if.family=Split If
goto.super.method.chooser.title=Choose super method
dialog.edit.template.error.title=Cannot Save
create.file.family=Create File
generate.equals.hashcode.warning.hashcode.for.arrays.is.not.supported=hashCode () for arrays is not supported
title.popup.show.coverage=Coverage Suites
create.directory.command=Create directory
unwrap.if=Unwrap 'if...'
status.bar.highlighted.usages.not.found.no.target.message=No usages found
intention.make.type.generic.text=Change type of {0} to {1}
generate.equals.hashcode.equals.fields.chooser.title=Choose &fields to be included in equals()
i18nize.dialog.error.jdk.title=Class Not Found
intention.bind.fields.from.parameters.text=Bind {0} Parameters to Fields
intention.error.cannot.create.class.title=Failed to Create Class
surround.with.if.expression.template=if (expr) {...}
templates.dialog.edit.variables.action.move.up=Move &Up
intention.extract.if.condition.family=Extract If Condition
goto.super.method.findUsages.title=Super methods of {0}
dialog.edit.live.template.title=Edit Live Template
macro.enum=enum(...)
intention.move.initializer.to.set.up=Move initializer to setUp method
generate.getter.setter.title=Select Fields to Generate Getters and Setters
highlight.imported.classes.chooser.title=Choose Imported Classes to Highlight
n.of.m={0} of {1}
override.implement.broken.file.template.message=Please Correct "Overridden/Implemented Method Body" Template
dialog.edit.template.checkbox.shorten.fq.names=Shorten &FQ names
generate.delegate.target.chooser.title=Select Target to Generate Delegates for
dialog.edit.template.checkbox.jsp=JS&P
error.dialog.readonly.files.title=Cannot Modify Read-Only Files
surround.with.synchronized.template=synchronized
generate.delegate.method.chooser.title=Select Methods to Generate Delegates for
inspection.unresolved.property.key.reference.message=String literal ''{0}'' doesn''t appear to be valid property key
dialog.edit.template.label.group=&Group\:
multiple.implementations.tooltip=Multiple implementations
enable.intention.action=Enable ''{0}''
i18nize.dialog.error.jdk.message=Class 'java.util.ResourceBundle' cannot be found.\nPlease setup correct JDK.
livetemplate.description.ritar=Iterate elements of array in reverse order
i18n.quickfix.code.panel.resource.bundle.expression.label=Resource bundle &expression\:
copy.abstract.method.popup.title=Choose implementation to copy
template.shortcut.tab=Tab
surround.with.if.template=if
javadoc.throws=Throws\:
rename.file.fix=Rename File
macro.classname=className()
remove.annotation=Remove annotation
macro.expected.type=expectedType()
node.class.tooltip=Class
intention.convert.to.basic.latin=Convert to Basic Latin
display.coverage.prompt=Do you want to display coverage data for ''{0}''?
searching.for.implementations=Searching For Implementations...
templates.dialog.edit.variables.table.column.skip.if.defined=Skip if defined
generate.equals.and.hashcode.error.no.object.class.message=Cannot generate equals() and hashCode().\nNo java.lang.Object class found.
macro.suggest.variable.name=suggestVariableName()
intention.color.chooser.dialog=Choose Color
macro.decapitalize.string=decapitalize(String)
javadoc.action.back=Back
dialog.create.class.destination.package.label=Destination package\:
intention.add.override.annotation=Add '@Override' Annotation
quick.definition.edit.source=Edit Source
generate.equals.warning.equals.for.nested.arrays.not.supported=equals() for nested arrays is not supported
javadoc.description.copied.from.interface=Description copied from interface\:
declaration.navigation.title=Choose Declaration
intention.create.test.dialog.select.methods=Generate test methods for\:
progress.reformat.and.optimize.common.command.text=Reformat and Optimize Imports
i18n.quickfix.property.panel.property.value.label=Property &Value\:
error.dialog.readonly.files.message={0} contains read-only file(s).\nProcess all other (writeable) files?
inspection.i18n.option.ignore.property.keys=Ignore literals which have value equal to existing property key
templates.dialog.table.column.description=Description
inspection.i18n.option.ignore.for.specified.exception.constructor.arguments=Ignore for specified exception constructor arguments
generate.equals.and.hashcode.error.no.object.class.title=No java.lang.Object
livetemplate.description.surround.tag=Surround with <tag></tag>
livetemplate.description.surround.with.callable=Surround with Callable
macro.iterable.component.type=iterableComponentType(ArrayOrIterable)
surround.with.not.instanceof.template=\!(expr instanceof Type)
unwrap.else=Unwrap 'else...'
intention.bind.fields.from.parameters.family=Bind Parameters to Fields
unwrap.anonymous=Unwrap 'anonymous...'
process.reformat.code=Reformat Code
intention.move.initializer.to.constructor=Move initializer to constructor
generate.equals.hashcode.non.null.fields.chooser.title=Select all non-null &fields
inspection.invalid.resource.bundle.reference=Invalid resource bundle reference ''{0}''
dialog.create.class.label=Create {0}\:
rename.public.class.text=Rename class ''{0}'' to ''{1}''
generate.equals.hashcode.accept.sublcasses=Accept &subclasses as parameter to equals() method
dialog.edit.template.checkbox.html.text=HTML Text
remove.else=Remove 'else...'
status.bar.exit.points.highlighted.message={0} exit {0, choice, 1\#point|2\#points} highlighted (press {1} again to remove the highlighting, Escape to remove all highlighting)
status.bar.highlighted.usages.message={0} {0, choice, 1\#usage|2\#usages} of {1} found (press {2} again to remove the highlighting, Escape to remove all highlighting)
intention.create.field.from.parameter.text=Create Field for Parameter ''{0}''
progress.reformat.stage.wrapping.blocks=Preparing...
intention.implement.abstract.class.family=Implement Abstract Class or Interface
javadoc.method.specified.by=Specified by\:
intention.create.test.dialog.library.not.found={0} library not found in the module
goto.test.chooserTitle.subject=<html><body>Choose Test Subject for <b>{0}</b> ({1} found)</body></html>
class.completion.file.path.all.variants=Press {0} to search for matching files of any type
unwrap.with.placeholder=Unwrap ''{0}''
dialog.create.field.from.parameter.field.type.label=Field of type\:
macro.methodname=methodName()
unwrap.popup.title=Choose the statement to unwrap/remove
reformat.option.selected.text=&Selected text
javadoc.candidates=<html>Candidates for method call <b>{0}</b> are\:<br><br>{1}</html>
dialog.import.on.paste.title=Select Classes to Import
intention.replace.concatenation.with.formatted.output.family=Replace Concatenation with Formatted Output
macro.linenumber=lineNumber()
i18nize.error.creating.properties.file=Error creating properties file
surround.with.ifelse.expression.template=if (expr) {...} else {...}
node.anonymous.class.tooltip=Anonymous Class
dialog.reformat.files.reformat.selected.files.label=Reformat selected files?
livetemplate.description.psvm=main() method declaration
highlight.thrown.exceptions.chooser.all.entry=All listed
surround.with.try.finally.template=try / finally
intention.create.test=Create Test
coverage.data.not.found=Coverage data not found
intention.replace.cast.with.var.family=Replace cast with variable
generate.list.popup.title=Generate
dialog.reformat.files.title=Reformat Files
javadoc.see.also=See Also\:
dialog.edit.template.label.abbreviation=&Abbreviation\:
generate.constructor.fields.chooser.title=Choose Fields to Initialize by Constructor
dialog.create.class.name=Create {0} {1}
generate.equals.hashcode.accept.sublcasses.explanation=<html><body>While generally incompliant to Object.equals() specification accepting<br>subclasses might be necessary for generated method to work correctly<br>with frameworks, which generate Proxy subclasses like Hibernate.</body></html>
surround.with.chooser.title=Surround With
copy.abstract.method.intention.name=Use existing implementation of ''{0}''
status.bar.highlighted.usages.no.target.message={0} {0, choice, 1\#usage|2\#usages} found (press {2} again to remove the highlighting, Escape to remove all highlighting)
livetemplate.description.itli=Iterate elements of java.util.List
inspection.error.dialog.title=Error
intention.create.test.dialog.testing.library=Testing library\:
goto.implementation.chooserTitle=<html><body>Choose Implementation of <b>{0}</b> ({1} found)</body></html>
paste.dataflavor.referencedata=ReferenceData
property.has.more.parameters.than.passed=Property ''{0}'' expected {1} {1, choice, 1\#parameter|2\#parameters}, passed {2}
livetemplate.description.tag.pair=Tag pair
prompt.remove.coverage=Do you want to remove ''{0}'' coverage data?
node.static.flag.tooltip=Static
class.completion.file.path=Press {0} again to search for all matching project files
surround.with.while.template=while
create.file.text=Create File {0}
error.cannot.resolve.default.message=Cannot resolve symbol ''{0}''
intention.convert.color.representation.family=Convert Color representation
inspection.i18n.display.name=Hard coded strings
copy.abstract.method.title=Use Abstract Method Implementation
node.junit.test.tooltip=JUnit Test
templates.dialog.table.column.abbreviation=Abbreviation
livetemplate.description.st=String
javadoc.method.overrides=Overrides\:
dialog.paste.on.import.text2=<html>The code fragment which you have pasted uses elements that are not accessible by imports in the new context.<br/>Select elements that you want to import to the new file.</html>
livetemplate.description.surround.with.write.lock=Surround with ReadWriteLock.writeLock
templates.no.defined=No templates defined in this context
no.methods.overriding.0.are.found=No methods overriding {0, choice, 0\#|1\# '{1}'|2\#these classes} are found
inspection.i18n.option.ignore.qualified.class.names=Ignore literals which have value equal to existing qualified class name
unwrap.for=Unwrap 'for...'
i18n.quickfix.preview.panel.title=Preview
under.construction.string=Under construction.
i18n.quickfix.property.panel.title=Property Info
intention.implement.abstract.method.command.name=Implement method
template.next.variable.command=Go to Next Code Template Tab
process.optimize.imports=Optimize Imports
javadoc.returns=Returns\:
macro.capitalize.string=capitalize(String)
javadoc.method.in.interface={0} in interface {1}
intention.create.test.dialog.fix.library=Fix
quick.definition.show.source=Show Source
intention.settings.category.text=<html><body><font face\="verdana" size\="-1"><center>You have selected the intention category ''<b>{0}</b>''.</center><center>By clicking the checkbox, you can enable/disable all intentions in this category.</center><center>To enable/disable a particular intention, select the intention inside this category.</center></font></body></html>
intention.add.single.member.static.import.text=Add static import for ''{0}''
intention.split.declaration.assignment.text=Split into declaration and assignment
inspection.i18n.message.general.with.value=Hard coded string literal\: {0}
surround.with.try.catch.incorrect.template.message=Invalid File Template for Catch Body\!
macro.suggest.first.variable.name=suggestFirstVariableName()
surround.with.parenthesis.template=(expr)
intention.create.test.dialog.show.inherited=Show inherited methods
quickfix.add.variable.text=Initialize variable ''{0}''
dialog.create.field.from.parameter.already.exists.title=Field Already Exists
macro.array.variable=arrayVariable()
node.method.tooltip=Method
goto.test.findUsages.test.title=Tests for {0}
methods.to.implement.chooser.title=Select Methods to Implement
highlight.exceptions.thrown.notfound=No exceptions thrown in the method found
macro.file.name=fileName()
macro.capitalizeAndUnderscore.string=capitalizeAndUnderscore(String)
process.optimize.imports.before.commit=Optimize Imports Before Commit
set.language.level=Set language level
macro.iterable.variable=iterableVariable()
node.runnable.class.tooltip=\u53EF\u8FD0\u884C\u7C7B
intention.implement.abstract.method.class.chooser.title=Choose Implementing Class
livetemplate.description.itit=Iterate java.util.Iterator
intention.intercept.ejb.method.or.class.class.text=Add interceptor for EJB class ''{0}''
choose.type.popup.title=Choose Type
intention.add.on.demand.static.import.text=Add on demand static import for ''{0}''
process.scope.file=&File {0}
inspection.i18n.quickfix.annotate.as=Annotate as @{0}
intention.intercept.ejb.method.or.class.family=Add EJB interceptor
unwrap.conditional=Unwrap 'f ? a \: b'
dialog.edit.template.label.expand.with=E&xpand with
i18nize.dialog.property.file.chooser.title=Choose Properties File
i18nize.dialog.title=I18nize Hardcoded String
i18n.quickfix.property.panel.properties.file.label=&Properties File\:
intention.replace.concatenation.with.formatted.output.text=Replace '+' with 'java.text.MessageFormat.format()'
livetemplate.description.serr=Prints a string to System.err
process.scope.module=Module ''{0}''
intention.edit.interceptor.binding.family=Interceptor Bindings
reformat.option.all.files.in.directory=&All files in directory {0}
dialog.edit.template.checkbox.xsl.text=XSL Text
dialog.intention.settings.description.usage.example.title=Usage Example
intention.error.cannot.create.class.message=Cannot Create Class ''{0}''
template.previous.variable.command=Go to Previous Code Template Tab
cast.expression=Cast expression
process.scope.project=Project ''{0}''
livetemplate.description.geti=Inserts singleton method getInstance
surround.with.cast.template=((Type)expr)
surround.with.try.catch.finally.template=try / catch / finally
node.excluded.flag.tooltip=Excluded
intention.create.test.dialog.generate=Generate\:
node.field.tooltip=Field
highlight.overridden.classes.chooser.title=Choose Classes to Highlight Overridden Methods from
quick.definition.back=Back
intention.edit.interceptor.binding.text=Edit Interceptor ''{0}'' bindings
i18nize.dialog.template.link.label=Edit I18n template
methods.to.override.chooser.title=Select Methods to Override
i18nize.cant.create.properties.file.because.its.name.is.associated=Can''t create properties file ''{0}'' because its name is associated with the {1}.
inspection.i18n.option.ignore.assert=Ignore for assert statement arguments
intention.make.type.generic.family=Make Type Generic
dialog.edit.template.error.malformed.abbreviation=Cannot save the template.\nTemplate abbreviation should contain only letters, digits, dots and hyphens.
templates.dialog.edit.variables.border.title=Variables
intention.implement.abstract.class.subclass.text=Create Subclass
dialog.edit.template.context.title=Context
reformat.option.optimize.imports=&Optimize imports
javadoc.description.copied.from.class=Description copied from class\:
codeinsight.settings=CodeInsight settings
generate.equals.and.hashcode.already.defined.title=Generate equals() and hashCode()
process.rearrange.code.before.commit=Rearrange Code Before Commit
intention.implement.abstract.method.family=Implement Abstract Method
intention.convert.color.representation.text=Convert to ''new Color{0}''
javadoc.documentation.not.found.message=The documentation for this element is not found.\nPlease add all the needed paths to API docs in Project Settings.
generate.equals.hashcode.hashcode.fields.chooser.title=Choose &fields to be included in hashCode()
disable.intention.action=Disable ''{0}''
inspection.unresolved.property.key.reference.name=Invalid property key
intention.add.on.demand.static.import.family=Add On Demand Static Import
livetemplate.description.inst=Checks object type with instanceof and down-casts it
intention.implement.abstract.method.error.no.classes.message=There are no classes found where this method can be implemented
status.bar.overridden.methods.highlighted.message={0} overridden {0, choice, 1\#method|2\#methods} found (press {1} again to remove the highlighting, Escape to remove all highlighting)
template.shortcut.enter=Enter
i18n.quickfix.property.panel.property.key.label=Property &Key\:
livetemplate.description.lst=Fetches last element of an array
command.name.surround.with.runtime.cast=Surround with runtime cast
dialog.create.field.from.parameter.declare.final.checkbox=Declare &final
error.dialog.readonly.file.title=File Is Read-Only
livetemplate.description.psf=public static final
surround.with.runnable.template=\u53EF\u8FD0\u884C
finish.template.command=Finish Template
incremental.search.tooltip.prefix=Search for\:
macro.groovy.script=groovyScript("groovy code")
dialog.create.field.from.parameter.already.exists.text=Use existing field ''{0}''?
templates.dialog.edit.variables.table.column.expression=Expression
reformat.progress.file.with.known.name.text=Reformatting {0}
macro.undescoresToSpaces.string=underscoresToSpaces(String)
i18nize.dialog.error.property.already.defined.title=Property Already Exists
parameter.info.no.parameters=<no parameters>
javadoc.candidates.not.found=<html>No candidates found for method call <b>{0}</b>.</html>
livetemplate.description.mx=Sets greater value to a variable
error.cannot.convert.default.message=Invalid value\: ''{0}''
intention.create.field.from.parameter.family=Create Field for Parameter
livetemplate.description.iter=Iterate Iterable | Array in J2SDK 5.0 syntax
livetemplate.description.iten=Iterate java.util.Enumeration
livetemplate.description.mn=Sets lesser value to a variable
dialog.add.live.template.title=Add Live Template
macro.method.parameters=methodParameters()
javadoc.resolved.value=Resolved value\: 
dialog.edit.template.checkbox.smart.type.completion=Smart type c&ompletion
quickfix.i18n.command.name=I18nize
templates.export.display.name=Live templates
quick.definition.forward=Forward
error.hint.file.is.readonly=File {0} is read-only
intention.add.single.member.static.import.family=Add Single-Member Static Import
lightbulb.tooltip=Click or press {0}
intention.move.field.assignment.to.declaration=Move assignment to field declaration
quickfix.add.variable.family.name=Initialize variable
javadoc.action.forward=Forward
macro.right.side.type=rightSideType()
coverage.data.outdated=Coverage data outdated
generate.equals.and.hashcode.already.defined.warning.anonymous=Methods 'boolean equals(Object)' and 'int hashCode()' are already defined\nfor this anonymous class. Do you want to delete them and proceed?
powered.by=Powered by
templates.dialog.edit.variables.table.column.name=Name
inspection.i18n.option.ignore.for.junit.assert.arguments=Ignore for JUnit assert arguments
surround.with.try.catch.incorrect.template.title=Surround With Try / Catch
node.annotation.tooltip=Annotation
intention.introduce.variable.text=Introduce local variable
macro.component.type.of.array=componentTypeOf(Array)
intention.split.if.text=Split into 2 if's
reformat.option.include.subdirectories=&Include subdirectories
no.coverage=No coverage
surround.with.ifelse.template=if / else
livetemplate.description.if.null=Inserts ''if null'' statement
intention.implement.abstract.method.text=Implement method ''{0}''
dialog.edit.template.template.text.title=&Template text\:
generate.equals.warning.generated.equals.could.be.incorrect=Generated equals() for Object[] can be incorrect
intention.insert.literal.underscores=Insert underscores into literal
livetemplate.description.itover=Iterate over an Iterable or Array selection in J2SDK 5.0 syntax
cast.to.0=Cast to ''{0}''
macro.guess.element.type.of.container=guessElementType(Container)
goto.test.chooserTitle.test=<html><body>Choose Test for <b>{0}</b> ({1} found)</body></html>
dialog.edit.template.checkbox.use.static.import=Use static &import if possible
inspection.i18n.expression.is.invalid.error.message=The I18nized Expression template is not a valid expression
intention.remove.literal.underscores=Remove underscores from literal
methods.to.override.implement.chooser.title=Select Methods to Override/Implement
livetemplate.description.itco=Iterate elements of java.util.Collection
dialog.edit.template.shortcut.default=Default ({0})
intention.implement.abstract.method.error.no.classes.title=No Classes Found
livetemplate.description.surround.with.read.lock=Surround with ReadWriteLock.readLock
inspection.i18n.option.ignore.comment.title=Non-Nls comment pattern
intention.encapsulate.field.text=Encapsulate field
intention.create.test.dialog.super.class=Superclass\:
dialog.copy.live.template.title=Copy Live Template
dialog.edit.template.options.title=Options
unwrap.try=Unwrap 'try...'
generate.constructor.super.constructor.chooser.title=Choose Super Class Constructor
reformat.option.rearrange.entries=&Rearrange entries
javadoc.fetching.progress=Fetching Documentation...
intention.surround.resource.with.ARM.block=Surround with try-with-resources block
dialog.edit.template.error.already.exists=Cannot save the template.\nTemplate with the abbreviation "{0}"\nalready exists in group "{1}".\nPlease choose a different abbreviation or group.
dialog.edit.template.label.description=&Description\:
intention.split.declaration.family=Split Declaration
goto.implementation.findUsages.title=Implementations of {0}
templates.dialog.edit.variables.title=Edit Template Variables
inspection.i18n.option.ignore.assigned.to.constants=Ignore literals assigned to constants
code.coverage=Code Coverage
goto.super.class.chooser.title=Choose super class or interface
generate.equals.hashcode.wizard.title=Generate equals() and hashCode()
remove.catch=Remove 'catch...'
code.coverage.is.not.supported=Code coverage is supported for jre 5.0 or higher
process.reformat.code.before.commit=Reformat Code Before Commit
javadoc.deprecated=Deprecated
surround.with.not.template=\!(expr)
progress.reformat.stage.applying.changes=Storing changes...
dialog.create.class.package.chooser.title=Choose Destination Package
create.tagfile.text=Create Tag File {0}
dialog.edit.template.button.edit.variables=&Edit variables
javadoc.parameters=Parameters\:
