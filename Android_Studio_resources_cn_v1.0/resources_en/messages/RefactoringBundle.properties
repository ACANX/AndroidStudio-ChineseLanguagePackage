#author: 2483808264@qq.com
#Fri Dec 12 08:20:44 CST 2014
field.0.is.already.defined.in.the.1=Field {0} is already defined in the {1}
members.to.form.interface=Mem&bers to form interface
instances.upcasted.to.object=Instances upcasted to Object
0.contains.call.with.null.argument.for.parameter.1={0} contains call with null argument for parameter {1}
remove.parameter.0.no.longer.used=Remove parameter ''{0}'' no longer used
would.you.like.to.replace.default.constructor.of.0.with.factory.method=Would you like to replace default constructor of {0} with factory method?
replace.button=Replace
inline.class.elements.header=Class to inline
field.0.is.not.static=Field {0} is not static.\n{1} refactoring is supported for static members only.
invert.boolean.title=Invert Boolean
there.is.already.a.0.in.the.1.it.will.conflict.with.the.renamed.parameter=There is already a {0} in the {1}. It will conflict with the renamed parameter.
type.cook.ratio.generified={0,choice,-1\#not calculated|0\#{0,number} of {1}}
no.superclass.name.specified=No superclass name specified
move.single.class.or.package.name.label=Move {0} {1}
moveInstanceMethod.select.an.instance.parameter=Select an &instance parameter\:
no.interface.name.specified=No interface name specified
extract.method.title=Extract Method
encapsulate.fields.field.column.name=Field
safe.delete.comment.occurences.header=Occurrences found in comments, strings and non-code files {0}. Those occurrences will not be changed
instance.initializer.description=instance initializer of class {0}
the.following.problems.were.found=The following problems were found\:
renaming.0.1.to.2=Renaming {0} {1} to {2}
ExtractSuperClass.superclass=Superclass
class.0.does.not.have.inheritors=Class {0} does not have inheritors
changeSignature.exception.caller.chooser=Select Methods To Propagate New Exceptions
rename.variables.title=Rename Variables
inline.parameter.error.varargs=Inline for varargs parameters is not supported
extractIncludeFile.name=Extract Include File
javadoc.move=&Move
rename.tests.with.the.following.names.to=Rename tests with the following names to\:
migration.type.column.header=Type
move.class.to.inner.command.name=Move {0} to {1}
0.is.a.part.of.method.hierarchy.do.you.want.to.delete.multiple.parameters={0} is a part of method hierarchy. Do you want to delete multiple parameters?
type.cook.drop.obsolete.casts=&Drop obsolete casts
method.0.will.implement.method.of.the.base.class=Method {0} will implement \na method of the base class {1}
the.file.will.be.copied.to.this.directory=File will be copied to this directory
entity.name.form=Form
choose.the.ones.you.want.to.be.deleted=Choose the ones you want to be deleted
change.signature.feel.lucky=Feel &lucky
constructor.being.refactored.is.used.in.initializer.of.0=Constructor being refactored is used in initializer of {0}. Non-static factory of inner class{1} cannot be used in this context. Resulting code will not compile.
inline.method.command=Inlining method {0}
error.title=Error
migration.package=Package
rename.tests.title=Rename Tests
method.duplicates.method.label=Method {0}
replacing.inheritance.with.delegation=Replacing inheritance with delegation
classes.to.push.down.members.to=Classes to push down members to {0}
replace.method.duplicates.scope.chooser.title=Specify {0} Scope
fields.to.be.refactored.should.belong.to.the.same.class=Fields to be refactored should belong to the same class
0.is.1.and.will.not.be.accessible.from.2.in.the.target.class={0} is {1} and will not be accessible from {2}.
encapsulate.fields.title=Encapsulate Fields
0.to.change.signature={0} to change signature
copy.files.clone.file.0=Clone file {0}
cancel.button=Ca&ncel
refactoring.extract.method.dialog.output.variables=Output variables
references.found.in.generated.code=References found in generated code
migration.class=Class
changeSignature.cannot.resolve.return.type=Return type ''{0}'' cannot be resolved.\nContinue?
replace.all.occurences=Replace &all occurrences ({0} occurrences)
no.button=&No
0.implements.1={0} implements {1}.
rename.inheritors=Rename &inheritors
move.classes.destination.to.package=To packa&ge
push.down.will.delete.members=Pushing members down will result in them being deleted. Would you like to create a new subclass?
idea.has.found.fragments.that.can.be.replaced.with.include.directive={0} has found fragments that can be replaced with include directive\nDo you want to review them?
column.name.any.var=Any var
error.wrong.caret.position.anonymous=Caret should be positioned inside anonymous class to be refactored
visibility.private=Pri&vate
type.migration.rerun.button.text=&Rerun Type Migration
column.name.type=Type\:
replace.inheritance.with.delegation.title=Replace Inheritance With Delegation
encapsulate.fields.setter.exists=There is already method {0} which differs from setter {1} by return type only
safe.delete.of.those.0.in.comments.strings.non.code=Of those {0,choice,1\#1 usage is|2\#{0,number} usages are} in strings, comments, non-code files or generated code.
references.in.code.to.0.1=References in code to {0} {1}
selected.expression.has.void.type=Selected expression has void type.
members.to.be.pulled.up=Mem&bers to be pulled up
changeSignature.no.type.for.parameter=Specify type for parameter ''{0}''
current.class=current class
0.to.be.renamed.to.1.2={0} to be renamed to {1}{2}
changeSignature.name.prompt=&Name\:
encapsulate.fields.getter.exists=There is already method {0} which differs from getter {1} by return type only
usages.detected.title=Usages Detected
refactoring.cannot.be.applied.no.sources.attached={0} refactoring cannot be applied\: no sources attached
target.0.is.not.accessible.from.1=Target {0} is not accessible from {1}
select.refactoring.title=Select Refactoring
parameter.initializer.contains.0.but.not.all.calls.to.method.are.in.its.class=Parameter initializer contains {0}, but not all calls to method are in its class
process.methods.duplicates.title=Process Method {2} Duplicate ({0} of {1})
variable.of.type=Variable of &type\:
move.method.is.not.supported.when.method.is.part.of.inheritance.hierarchy=Move method is not supported when method is a part of inheritance hierarchy
is.not.supported.in.the.current.context={0} is not supported in current context
rename.directory.button.text=Rename &directory
inline.parameter.command.name=Inline Parameter {0}
move.specified.directories=Move specified directories
field.description=field {0}
encapsulate.fields.fields.to.be.encapsulated=Fields to be encapsulated
renames.project=Renames project
items.to.be.deleted=Items to be deleted
class.is.never.used=Class is never used
members.to.form.superclass=Mem&bers to form superclass
members.to.be.pushed.down.panel.title=Mem&bers to be pushed down
changeSignature.refactoring.name=Change Signature
cannot.introduce.field.in.interface=Cannot extract field in the interface
inline.command=Inline {0}
file.already.exist=File {0} already exists
variable.is.accessed.for.writing.and.used.with.inlined=Another variable ''{0}'' definition is used together with inlined one
introduce.field.title=Extract Field
add.parameters.for.fields=Add parameters for &fields\:
refactoring.extract.method.dialog.empty=Empty
search.in.comments.and.strings=Search in &comments and strings
safe.delete.title=Safe Delete
migration.move.up.button=Move Up
moving.directories.command=Moving directories
rename.title=Rename
type.migration.include.action.text=&Include
turn.refs.to.super.command=Replacing usages of {0} with {1}
add.parameters.for.fields.to.constructors=Add parameters for &fields to constructors\:
statusBar.refactoring.result={0, choice, 1\#1 occurrence|2\#{0,number} occurrences} changed
inline.title=Inline
type.cook.command=Generify
introduce.constant.field.of.type=Constant (static final field) of &type\:
move.class.to.inner.move.to.self.error=It is not allowed to move a class into itself
visibility.combo.title=&Visibility\:
inline.to.anonymous.no.inheritors=Classes which have subclasses cannot be inlined
refactoring.is.not.supported.for.local.and.jsp.classes=Refactoring is not supported for local and JSP classes
replace.inheritance.from=&Replace with delegation inheritance from\:
to.rename=to rename
make.0.static=Make {0} Static
selected.block.should.represent.a.set.of.statements.or.an.expression=Selected block should represent a set of statements or an expression
invert.boolean.wrong.type=Return type of the method or type of the variable to be refactored should be boolean
do.not.show.this.message.in.the.future=&Do not show this message in the future
class.does.not.have.base.classes.or.interfaces=Class {0} does not have base classes or interfaces
replace.inheritance.with.delegation.command=Replacing inheritance with delegation in {0}
directory.0.already.contains.1.named.2=Directory {0} \nalready contains {1} named ''{2}''
invert.boolean.name.of.inverted.element=&Name of inverted {0}\:
encapsulate.fields.no.fields.selected=No fields selected
copy.handler.clone.class=Clone Class
inline.included.file.title=Inline included file
move.directories.to.another.source.root=Move {0} directories to &another source root
member.info.implements.0=implements {0}
0.referenced.in.1.will.not.be.accessible.in.module.2={0}, referenced in {1}, will not be accessible in module {2}
0.is.not.a.legal.java.identifier=''{0}'' is not a legal java identifier
refactoring.extract.method.dialog.signature.preview=Signature preview
interface.does.not.have.base.interfaces=Interface {0} does not have base interfaces
copy.class.copy.0.1=Copy {0} {1}
migration.entry.new.name=New name\:
replace.constructor.with.factory.method=Replace constructor with factory method
caller.chooser.looking.for.callers=Looking For Callers...
0.already.exists.in.the.target.class={0} already exists in the target class.
move.current.directory=Move &current
0.is.an.interface.method.implementation.will.be.added.to.all.directly.implementing.classes={0} is an interface. \nMethod implementation will be added to all directly implementing classes.\n Proceed?
move.members.members.to.be.moved.border.title=Mem&bers to be moved (static only)
boolean.method.result=boolean method result
progress.text=Looking for Usages
introduce.parameter.title=Extract Parameter
annotate.field.as.nonnls.checkbox=Annotate &field as @NonNls
variable.does.not.have.an.initializer=Variable {0} does not have an initializer.
a.package.local.class.0.will.no.longer.be.accessible.from.1=Package-local class {0} will no longer be accessible from {1}
0.is.used.for.writing.in.1={0} is used for writing in {1}
changeSignature.default.value.column=Default Value
make.abstract=Make abstract
do.you.wish.to.continue=Do you wish to continue?
change.signature.leave.blank.default.value=Leave &blank
locate.caret.inside.a.method=Locate caret inside a member
there.is.already.a.0.in.1=There is already a {0} in {1}
inline.the.contents.include.prompt=Inline the contents of ''{0}''?
unknown.expression.type=Unknown expression type.
replace.with.method.call.does.not.work.for.constructors=Replace With Method Call does not work for constructors
method.has.an.empty.body=Method {0} has an empty body.
refactoring.cannot.be.applied.to.abstract.methods={0} refactoring cannot be applied to abstract methods
changeSignature.no.return.type=Return type is not specified
type.cook.report=Items generified\: {0}, casts removed\: {1}
there.are.unused.methods.that.override.methods.you.delete=There are unused methods that override methods you delete
detecting.possible.conflicts=Detecting possible conflicts...
inline.method.border.title=Inline
class.has.been.successfully.created=Class {0} has been successfully created
extractSuperInterface.interface=Interface
delegation.panel.delegate.via.overloading.method=De&legate via overloading method
anonymousToInner.no.inner.class.name=Class name should be specified
rename.tests=Rename t&ests
instances.casted.to.java.lang.object=Instances casted to java.lang.Object
0.will.no.longer.override.1={0} will no longer override {1}
inline.field.border.title=Inline
delete.title=Delete
caller.chooser.caller.method=Caller Method
the.caret.should.be.positioned.inside.a.class.to.pull.members.from=Caret should be positioned inside a class to pull members from
there.are.going.to.be.multiple.destination.files.with.the.same.name=There are going to be multiple destination files with the same name
the.caret.should.be.positioned.at.the.class.method.or.field.to.be.refactored=Caret should be positioned at the class, method or field to be refactored
the.file.will.be.moved.to.this.directory=File will be moved to this directory
javadoc.copy=&Copy
0.is.not.a.legal.fq.name=''{0}'' is not a legal FQ-name
member.info.extends.0=extends {0}
encapsulate.fields.setter.column.name=Setter
change.signature.use.selected.value=Use selected &value
directories.and.all.references.to.package.will.be.renamed=\n\nDo you want to rename the whole package or directory \n{0} only?
inline.parameter.refactoring=Inline Parameter
move.to.inner.duplicate.inner.class=Class {0} already contains an inner class named {1}
all.references.and.remove.super.class=Inline &all references and remove the class
no.class.name.specified=No class name specified
selected.block.should.represent.an.expression=Selected block should represent an expression
move.members.to.fully.qualified.name.label=To (fully qualified name)\:
move.single.element.elements.header={0} to be moved to {1}
cannot.create.directory=Cannot create directory
inline.to.anonymous.no.multiple.interfaces=Classes which implement multiple interfaces cannot be inlined
make.method.static.title=Make Method Static
rename.directories.command.name=Rename directories
0.will.be.inaccessible.from.1={0} will be inaccessible from {1}
extractSuper.extract=E&xtract {0}
inline.to.anonymous.refactoring=Inline to Anonymous Class
method.0.is.overridden.by.1=Method {0} is overridden by {1}
rename.0.and.its.usages.to=Rename {0} and its usages to\:
extract.to.directory=Extract to &directory\:
declare.static.checkbox=Declare &static
0.is.read.only={0} is read-only.\n
member.is.already.static=Member is already static
declaration.s.to.be.generified=Declaration(s) to be generified {0}
move.to.different.language=Target class {2} has different language than {0} {1}
method.column=Method
copy.files.to.directory.label=To &directory\:
invert.boolean.refs.to.invert=References to be inverted {0}
variable.is.never.used=Variable {0} is never used
signature.preview.border.title=Signature Preview
error.wrong.caret.position.method.or.class.name=Caret should be positioned at the name of method or class to be refactored
convertToInstanceMethod.all.reference.type.parametres.have.unknown.types=All reference type parameters have unknown types
0.uses.1.which.needs.class.instance={0} uses {1}, which needs class instance
rename.inheritors.title=Rename Inheritors
javadoc.as.is=&As is
replace.instance.qualifiers.with.class.references=Replace instance qualifiers with class references
inline.field.command=Inline field {0}
extract.superclass.elements.header=Extract superclass with members to directory
0.refactoring.is.supported.only.for.final.fields={0} refactoring is supported only for final fields
superclass.name=&Super class name\:
move.packages.elements.header=Packages to be moved to {0}
0.uses.1.which.is.not.accessible.from.the.superclass={0} uses {1}, which is not accessible from the superclass
used.by.0=used by {0}
rename.constructor.parameters.with.the.following.names.to=Rename parameters with the following names to\:
inner.class.0.is.already.defined.in.class.1=Inner class {0} is already defined in class {1}.\nContinue anyway?
inline.to.anonymous.name.label=Class {0}
delete.anyway.button=&Delete Anyway
replace.default.constructor.with.factory.method=Replace default constructor with factory method
encapsulate.fields.protected.radio=Pro&tected
rename.original.interface.to=Rename original interface to\:
move.inner.class.to.another.class=&Move inner class {0} to another class
changeSignature.cannot.resolve.parameter.type=Type ''{0}'' for parameter ''{1}'' cannot be resolved.\nContinue?
rename.project.handler.title=Rename &project
delete.variable.declaration=&Delete variable declaration
changeSignature.no.default.value=New parameter ''{0}'' has been added.\nSpecify default value to be used in all existing calls of this method.
refactoring.introduce.variable.scope.error=Name clashes with existing variable
class.does.not.have.base.classes.interfaces.in.current.project={0} does not have base classes/interfaces in current project
inline.vars.elements.header=Variable to inline
superclass.cannot.be.extracted.from.an.enum=Superclass cannot be extracted from enum
selected.block.contains.invocation.of.another.class.constructor=Selected block contains invocation of another class constructor
changeSignature.propagate.exceptions.title=Propagate E&xceptions...
encapsulate.fields.accessors.visibility.border.title=Accessors' Visibility
move.members.elements.header=Members to be moved
cannot.introduce.variable.in.super.constructor.call=Cannot extract variable in super constructor call
refactoring.introduce.name.error=Incorrect name
use.interface.superclass.in.instanceof=Use interface/superclass in instanceof
replace.constructor.with.factory.method.title=Replace Constructor With Factory Method
migration.edit.button=Edit...
usageView.doAction=&Do Refactor
file.already.exist.title=Extract Include File
inline.to.anonymous.border.title=Inline
target.destination.folder=Target &destination directory\:
New.name.of.method.is.not.java.identifier=New name of method is not Java identifier
functional.interface.broken=Functional expression demands functional interface to have exact one method
replace.all.occurences.checkbox=Replace &all occurrences
0.already.has.parameter.named.1.use.this.name.anyway={0} already has a parameter named ''{1}''.\nUse this name anyway?
choose.destination.package=Choose Destination Package
refactoring.introduce.name.used.error=This name is already used
pullUp.command=Pulling members up from {0}
type.cook.generify.objects=Generify &Objects
uses.0=uses {0}
method.duplicates.found.message={0, choice, 1\#1 code fragment|2\#{0,number} code fragments} found
migration.dialog.ok.button.text=\u8FD0\u884C
rename.module.title=Rename &Module
inline.to.anonymous.no.superclass.and.interface=Classes which have a superclass and implement an interface cannot be inlined
type.cook.leave.object.parameterized.types.raw=&Leave Object-parameterized types raw
changing.signature.of.0=Changing signature of {0}
dont.support.inner.classes=Refactoring ''Make inner class of'' is not available in {0}
replace.constructor.with.factory.target.fq.name=In (fully qualified name)\:
entity.name.inheritor=Inheritor
turnRefsToSuper.change.usages.to=&Change usages of {0} to\:
column.name.default.value=Default value
package.for.new.superclass=&Package for new superclass\:
selected.expression.cannot.be.a.constant.initializer=Selected expression cannot be a constant initializer
migration.move.down.button=Move Down
move.class.refactoring.cannot.be.applied.to.anonymous.classes=Move Class refactoring cannot be applied to anonymous classes
interface.member.dependency.required.by.interfaces=required by {0,choice,1\#interface|2\#interfaces}
replace.this.code.fragment.and.make.method.static=(Method will be made static)
rename.constructor.parameters.title=Rename Constructor Parameters
parameter.description=parameter {0}
variable.is.referenced.in.multiple.files=Variable {0} is referenced in multiple files
references.in.code=References in code {0}
error.not.supported.for.jsp={0} refactoring is not supported for JSP
move.method.is.not.supported.for.constructors=Move method is not supported for constructors
inlined.method.implements.method.from.0=Inlined method implements method from {0}
method.0.will.override.a.method.of.the.base.class=Method {0} will override \na method of the base class {1}
delegation.panel.method.calls.label=Method calls\:
changeSignature.parameters.wont.propagate=Recursive propagation of parameter changes won't be performed
delegation.panel.modify.radio=&Modify
move.file.0=Move file {0}
renaming.command.name=Renaming {0}
the.caret.should.be.positioned.inside.a.class.to.push.members.from=Caret should be positioned inside a class to push members from
package.occurs.in.package.prefixes.of.the.following.source.folders.n=Package {0} occurs in package prefixes of the following source folders\:\n
migration.map.name.prompt=Map name\:
0.uses.1.which.is.not.moved.to.the.superclass={0} uses {1}, which is not moved to the superclass
migration.new.name.column.header=New name
error.in.injected.lang.prefix.suffix=Selected {0} is located in the read-only part of injected language document
inline.parameter.confirmation=Inline parameter ''{0}'' with initializer ''{1}''?
this.reference.only.and.keep.super.class=Inline this reference only and &keep the super class
field.0.will.hide.field.1.of.the.base.class=Field {0} will hide \na field {1} of the base class {2}
refactoring.extract.method.dialog.method.name=Method name\:
create.directory=Create directory
expression.result=expression result
inline.field.field.name.label=Field {0}
method.0.will.hide.method.of.the.base.class=Method {0} will hide \nthe method of the base class {1}
move.class.to.inner.nonstatic.error=It is not allowed to move a class into a non-static inner class
error.out.of.project.element=Selected {0} is not located inside project.
encapsulate.fields.use.accessors.even.when.field.is.accessible.checkbox=&Use accessors even when field is accessible
source.and.destination.classes.should.be.different=Source and destination classes should be different
introduce.constant.enum.cb=Extract as &enum constant
0.upcasts.an.instance.of.1.to.2={0} upcasts an instance of {1} to {2}
migration.remove.button=Remove
pass.outer.class.instance.as.parameter=Pass &outer class' instance as a parameter
choose.destination.class=Choose Destination Class
replace.constructor.0.with.a.factory.method=Replace constructor {0} with a factory method
source.folder.0.has.package.prefix.1=Source folder {0} has package prefix ''{1}''\nPackage ''{2}'' cannot be created there.
extractSuper.rename.original.class.to=&Rename original class to\:
error.wrong.caret.position.class=Caret should be positioned inside class to be refactored
0.uses.non.static.1.which.is.not.passed.as.a.parameter={0} uses non-static {1}, which is not passed as a parameter
changeSignature.vararg.not.last=Vararg parameter should be the last in method signature
changeSignature.wrong.return.type=Wrong return type\: ''{0}''
refactoring.cannot.be.performed=Refactoring cannot be performed
rename.not.supported=Operation is not supported
replace.inheritance.with.delegation.elements.header=Replace inheritance with delegation
variable.has.no.initializer=Variable {0} has no initializer
changeClassSignature.refactoring.name=Change Class Signature
class.description=class {0}
edit.migration.entry.title=Edit Class/Package Migration Description
inline.field.elements.header=Field to inline
changeSignature.not.throwable.type=Wrong type ''{0}'' for exception, should extend java.lang.Throwable
invocations.to.be.inlined=Invocations to be inlined {0}
class.is.abstract={0} is abstract.
interface.0.does.not.have.inheritors=Interface {0} does not have inheritors
rename.variables.with.the.following.names.to=Rename variables with the following names to\:
inline.to.anonymous.command.name=Inline class {0}
move.inner.class.to.upper.level=Move &inner class {0} to upper level
warning.title=Warning
rename.bound.forms.title=Rename bound forms
encapsulate.fields.set.access.checkbox=&Set access
do.not.replace=Do &not replace
directory.description=Directory {0}
the.field.should.be.declared.in.a.class=The field should be declared in a class
move.members.title=Move Members
problems.detected.title=Problems Detected
inline.field.title=Inline Field
class.is.interface={0} is an interface.
cannot.move.inner.class.0.into.itself=Cannot move inner class {0} into itself
0.is.not.initialized.in.declaration.such.fields.are.not.allowed.in.interfaces={0} is not initialized in declaration. Such fields are not allowed in interfaces.
refactoring.is.not.supported.for.jsp.classes=Refactoring is not supported for JSP classes
cannot.extract.selected.elements.into.include.file=Cannot extract selected elements into include file
migration.no.usages.found.in.the.project=No Usages Found in the Project
inner.class.exists=Inner class named ''{0}'' is already defined\nin class ''{1}''
cannot.make.abstract.method.static=Cannot make abstract method static
references.found.in.code=References found in code
inline.method.elements.header=Method to inline
generate.getter.for.delegated.component=Generate &getter for delegated component
0.with.1.visibility.is.not.accessible.from.2={0} with {1} visibility won''t be accessible from {2}
method.0.is.not.static=Method {0} is not static.\n{1} refactoring is supported for static members only.
0.uses.1.which.is.pushed.down={0} uses {1}, which is pushed down
class.does.not.have.implicit.default.constructor=Class {0} does not have implicit default constructor
move.inner.class.to.be.moved=Class to be moved
type.migration.migrate.button.text=&Migrate
convert.to.instance.method.title=Convert To Instance Method
make.static.description.label=Make {0} {1} static
0.is.not.accessible.from.1.value.for.introduced.parameter.in.that.method.call.will.be.incorrect={0} is not accessible from {1}. Value for introduced parameter in that method call will be incorrect.
this.reference.only.and.keep.the.field=Inline this reference only and &keep the field
member.column=Member
usageView.need.reRun=Cannot perform refactoring operation.\nThere were changes in code after usages have been found.\nPlease perform usage search again.
do.you.want.to.process.overriding.methods.with.covariant.return.type=Do you want to process overriding methods\nwith covariant return type?
error.cannot.resolve=Cannot resolve {0}
anonymousToInner.parameters.panel.border.title=Constructor Parameters
extract.include.file.title=Extract include file
0.already.contains.inner.class.named.1={0} already contains inner class named {1}
please.enter.a.valid.target.package.name=Please enter a valid target package name
0.is.not.an.identifier=<b><code>{0}</code></b> is not a correct identifier to use in <b><code>{1}</code></b>
select.target.directory=Select target directory
there.are.no.variables.that.have.reference.type=There are no variables that have reference type
0.will.hide.renamed.1={0} will hide renamed {1}
no.destination.class.specified=No destination class specified
error.incorrect.data=Incorrect Data
instances.upcasted.to.java.lang.object.found=Instances upcasted to java.lang.Object found
move.method.this.parameter.label=Select a name for ''{0}.this'' parameter
visibility.escalate=&Escalate
error.wrong.caret.position.constructor=Caret should be positioned inside constructor to be refactored
inline.method.method.label=Method {0}
local.variable.description=local variable {0}
add.object.as.a.parameter.with.name=Add &object as a parameter with name\:
replace.this.code.fragment.and.change.signature=\nMethod signature will be changed to \n{0}
cannot.find.or.create.destination.directory=Cannot find or create destination directory
migration.add.button=Add...
copy.handler.copy.class=Copy Class
information.title=Information
type.of.the.selected.expression.cannot.be.determined=Type of selected expression cannot be determined.
unable.to.start.type.migration=Unable to start type migration
type.cook.preserve.raw.arrays=Preserve raw &arrays
extract.superclass.title=Extract Superclass
keep.abstract.column.header=Keep abstract
move.specified.packages=Move specified packages
migration.map.set.migration.maps=Migration maps
encapsulate.fields.command.name=Encapsulating fields in {0}
0.that.is.used.in.inlined.method.is.not.accessible.from.call.site.s.in.1={0} that is used in inlined method is not accessible from call site(s) in {1}
changeSignature.wrong.type.for.exception=Wrong type\: ''{0}'' for exception
class.0.not.found=Class {0} not found.
error.wrong.caret.position.method.or.local.name=Caret should be positioned at the name of element to be refactored
replace.fields.used.in.expressions.with.their.getters=Replace fields used in expressions with their getters
invalid.expression.context=Invalid expression context.
migration.entry.class=Class
replace.method.duplicates.scope.chooser.message=Analysis scope
this.reference.only.and.keep.the.class=Inline this reference only and &keep the class
method.0.is.already.defined.in.the.1=Method {0} is already defined in the {1}
extract.superclass.command.name=Extracting superclass {0} from {1}
rerun.safe.delete=&Rerun Safe Delete
all.candidate.variables.have.unknown.types=All candidate variables have unknown types
ok.button=OK
refactoring.introduce.selection.error=Cannot perform refactoring using selected element(s)
variable.is.never.used.before.modification=Variable {0} is never used before modification
convertToInstanceMethod.all.reference.type.parameters.are.not.in.project=All reference type parameters have types that are not in project
preview.usages.to.be.changed=&Preview usages to be changed
class.0.already.exists=Class {0} already exists
rename.project=Rename Project
statusBar.noUsages=No occurrences found
extractSuper.rename.original.class=R&ename original class and use {0} where possible
no.target.directory.specified=No target directory specified
extract.superclass.from=Extract superclass from\:
entity.name.constructor.parameter=Parameter
entity.name.test=Test
declare.varargs.checkbox=Declare v&arargs
these.package.prefixes.will.be.changed=These package prefixes will be changed.
to.refactor=to refactor
extract.chained.constructor.checkbox=Extract &chained constructor
move.instance.method.title=Move Instance Method
migration.old.name.column.header=Old name
references.to.0.to.be.replaced.with.references.to.1=References to ''{0}'' to be replaced with references to ''{1}''
this.invocation.only.and.keep.the.method=Inline this invocation only and &keep the method
inline.local.variable.prompt=Inline local variable ''{0}''?
moving.local.classes.is.not.supported=Moving local classes is not supported
idea.has.not.found.any.code.that.can.be.replaced.with.method.call={0} has not found any duplicates
introduce.constant.title=Extract Constant
no.members.selected=No members selected
encapsulate.fields..package.local.radio=Package lo&cal
refactoring.cannot.be.applied.to.inline.non.chaining.constructors={0} refactoring cannot be applied to inline non-chaining constructors
introduced.variable.will.conflict.with.0=Introduced variable will conflict with {0}
rename.inheritors.with.the.following.names.to=Rename inheritors with the following names to\:
instances.of.0.upcasted.to.1.were.found=Instances of {0} upcasted to {1} were found. If you continue, they will be shown in a separate Find tab.
fields.0.are.not.accessible=Fields {0} are not accessible from {1}
0.already.contains.a.1={0} already contains a {1}
usageView.usagesText=usages
invalid.target.package.name.default.package=Cannot move classes to default package
encapsulate.fields.encapsulate.border.title=Encapsulate
occurrences.found.in.comments.strings.non.java.files.and.generated.code=Occurrences found in comments, strings, non-code files and generated code
rename.implementation.class.to=Rename implementation class to\:
inner.class.name=&Inner class name\:
all.references.and.remove.the.field=Inline &all references and remove the field
copy.files.clone.title=Clone
refactoring.cannot.be.applied.to.vararg.constructors={0} refactoring cannot be applied to vararg constructors
replace.this.code.fragment.and.make.method.static.visible=(Method will be made static and {0})
changeClassSignature.no.type.parameters=Class cannot have type parameters
analyze.and.replace.usages=Analyze and Replace Usages
column.name.name=Name\:
copy.handler.copy.files.directories=Copy files/directories
replace.all.fields=&Replace all fields
extractSuperInterface.javadoc=JavaDoc
factory.method.name.label=Factory method name\:
anonymousToInner.refactoring.name=Convert Anonymous to Inner
destination.directory.does.not.correspond.to.any.package=The destination directory does not correspond to any package
unselect.all.button=&Unselect all
introduce.field.static.field.of.type=Static field of &type\:
multiple.directories.correspond.to.package=Multiple directories correspond to package\n
inner.class.0.is.not.static=Inner class {0} is not static.\n{1} refactoring is supported for static members only.
migration.title=Migration
current.method.radio=Current &method
0.is.an.interface.that.has.no.implementing.classes={0} is an interface that has no implementing classes
move.method.enter.a.valid.name.for.parameter=Please Enter a Valid name for Parameter
move.inner.class.command=Moving inner class {0}
rename.directory.command.name=Rename directory
occurences.to.be.migrated=Occurrences to be migrated {0}
add.object.as.a.parameter.to.constructors.with.name=Add &object as a parameter to constructors with name\:
there.is.already.a.0.it.will.conflict.with.an.introduced.parameter=There is already a {0}. It will conflict with the introduced parameter
rename.directories=Rename &all
refactoring.is.not.supported.for.language={0} is not supported for {1}
encapsulate.fields.fields.to.encapsulate.border.title=Fields to Encapsulate
variable.has.no.dominating.definition=Cannot find a single definition to inline
synthetic.jsp.class.is.referenced.in.the.method=Synthetic jsp class is referenced in method
no.initializer.present.for.the.field=No initializer present for the field
move.files.to.directory.label=To directory\:
0.refactoring.cannot.be.applied.to.constructors={0} refactoring cannot be applied to constructors
replace.this.code.fragment.and.make.method.visible=(Method will be made {0})
constructor.description=constructor {0}
0.is.not.static.it.cannot.be.moved.to.the.interface={0} is not static. It cannot be moved to the interface
0.has.detected.1.code.fragments.in.this.file.that.can.be.replaced.with.a.call.to.extracted.method={0} has detected {1} code {1,choice,1\#fragment|2\#fragments} in this file that can be replaced with a call to extracted method. Would you like to review and replace {1,choice,1\#it|2\#them}?
visibility.public=Pu&blic
usageView.tabText=Refactoring Preview
error.wrong.caret.position.method=Caret should be positioned inside method to be refactored
move.members.move.members.from.label=Move members from\:
interface.name.prompt=&Interface name\:
introduce.parameter.to.method=Extract parameter to method\:
method.is.not.a.constructor=Method is not a constructor
all.references.and.remove.the.class=Inline &all references and remove the class
visibility.border.title=Visibility
path.completion.shortcut=Use {0} for path completion
generify.title=Generify
entity.name.variable=Variable
unsupported.refs.found=Unsupported references found in {0} files
press.escape.to.remove.the.highlighting=Press Escape to remove the highlighting
encapsulate.fields.private.radio=Pr&ivate
inner.classes.cannot.have.static.members=Inner classes cannot have static members
encapsulate.fields.getter.column.name=Getter
introduce.selection.error=Cannot perform refactoring using selected element(s)
pull.up.members.to=P&ull up members of {0} to\:
copy.files.copy.specified.directories.label=Copy specified directories
type.cook.produce.wildcard.types=Produce &wildcard types
visibility.as.is=&As is
there.is.already.a.0.in.1.it.will.conflict.with.the.new.parameter=There is already a {0} in {1}. It will conflict with the new parameter.
rename.variables=Rename &variables
getter.method.found.for.the.field.0=Getter method found for the field {0}. \n{1} the getter as well?
introducing.variable.may.break.code.logic=Introducing variable may break code logic
move.specified.classes=Move specified classes
type.cook.elements.header=Scope(s) to generify
to.delete.with.usage.search=to delete (with usage search)
introduce.variable.title=Extract Variable
cannot.move=Cannot Move
setter.method.found.for.the.field.0=Setter method found for the field {0}. \n{1} the setter as well?
push.down.javadoc.panel.title=JavaDoc for abstracts
replace.temp.with.query.title=Replace Temp with Query
encapsulate.fields.get.access.checkbox=&Get access
all.these.directories.will.be.moved.and.all.references.to.0.will.be.changed=All these directories will be moved, and all references to {0} \nwill be changed.
migration.dialog.title=Package and Class Migration
introduce.parameter.elements.header=Adding parameter to a method
invert.boolean.elements.header={0} to invert
package.for.original.interface=&Package for original interface\:
migration.entry.old.name=Old name\:
0.uses.a.package.local.1={0} uses package-local {1}
refactoring.introduceVariable=Extract Variable refactoring
refactoring.is.not.supported.when.return.statement.interrupts.the.execution.flow={0} refactoring is not supported when return statement interrupts the execution flow
introduce.parameter.command=Extracting parameter to {0}
error.wrong.caret.position.symbol.to.refactor=Caret should be positioned at symbol to be refactored
migration.entry.package=Package
cannot.perform.refactoring=Cannot perform refactoring.
select.all.button=Select &all
field.declaration.radio=Field &declaration
0.will.become.inaccessible.from.1={0} will become inaccessible from {1}
changeSignature.parameter.caller.chooser=Select Methods To Propagate New Parameters
encapsulate.fields..encapsulated.fields.visibility.border.title=Encapsulated Fields' Visibility
error.wrong.caret.position.method.or.variable.name=Caret should be positioned at the name of method or variable to be refactored
move.package.refactoring.cannot.be.applied.to.default.package=Move Package refactoring cannot be applied to default package
name.for.extracted.include.file=&Name for extracted include file (default extension\: {0})
destination.package=Destination &package\:
push.down.members.elements.header=Push down members from
error.wrong.caret.position.local.or.expression.name=Caret should be positioned at the name of local variable or expression to be refactored
all.invocations.and.remove.the.method=Inline &all invocations and remove the method
error.wrong.name.input=Wrong name\: {0}
visibility.protected=Pr&otected
changeSignature.exceptions.wont.propagate=Recursive propagation of exception changes won't be performed
changeSignature.return.type.prompt=Return &type\:
this.member.does.not.seem.to.belong.to.any.class=This member does not seem to belong to any class
anonymousToInner.class.name.label.text=Class name\:
field.exists=Field with name {0}\nalready exists in class ''{1}''.\nContinue?
changeClassSignature.bad.default.value=Wrong default value\: ''{0}'' for parameter ''{1}''
safe.delete.command=Deleting {0}
move.directory.to.another.source.root=Move directory {0} to &another source root
no.parameter.name.specified=No parameter name specified
copy.files.copy.specified.mixed.label=Copy specified files and directories
automatic.renamer.enity.name.column={0} name
refactoring.extract.method.dialog.parameters=Parameters
move.instance.method.elements.header=Move instance method
replace.fields.inaccessible.in.usage.context=Replace fields &inaccessible in usage context
inline.method.title=Inline Method
inlined.method.overrides.method.from.0=Inlined method overrides method from {0}
push.members.down.title=Push Members Down
copy.files.new.name.label=&New name\:
move.specified.files=Move specified files
move.files.elements.header=Files to be moved to {0}
copy.files.copy.file.0=Copy file {0}
pushed.members.will.not.be.visible.from.certain.call.sites=Pushed members will not be visible from certain call sites
all.invocations.in.project=&All invocations in project
move.title=Move
changeSignature.wrong.type.for.parameter=Wrong type\: ''{0}'' for parameter ''{1}''
refactoring.introduce.placing.error=Cannot extract {0} variable
make.static.elements.header={0} to be made static
package.for.original.class=&Package for original class\:
do.you.wish.to.ignore.them.and.continue=Do you wish to ignore them and continue?
the.language.for.selected.elements.has.no.associated.file.type=The language for selected elements has no associated file type
searching.for.variables=Searching for variables
migration.package.with.subpackages=Package with subpackages
file.description=File {0}
directory.chooser.hide.non.existent.checkBox.text=&Hide non-existent
search.for.references=Search for re&ferences
parameters.border.title=Parameters
migration.new.button=New...
extract.interface.from=Extract interface from\:
create.class.command=Create class {0}
this.method=This method
refactoring.extract.method.dialog.title=Extract Method
move.classes.destination.make.inner=&Make inner class of
field.name=&Field name\:
initialize.in.border.title=Initialize in
convertToInstanceMethod.method.is.not.static=Cannot perform the refactoring\nMethod {0} is not static
error.wrong.caret.position.local.name=Caret should be positioned at the name of local variable to be refactored
copy.files.copy.directory.0=Copy directory {0}
process.duplicates.title=Process Duplicate {0} of {1}
0.will.override.renamed.1={0} will override renamed {1}
anonymousToInner.make.class.static.checkbox.text=Make class &static
all.candidate.variables.have.types.not.in.project=All candidate variables have types that are not in project
introduce.constant.introduce.to.class=Extract to &class (fully qualified name)\:
changeSignature.exceptions.panel.border.title=Exceptions
variable.is.accessed.for.writing=Variable ''{0}'' is accessed for writing
rename.forms.with.the.following.names.to=Rename forms with the following names to\:
refactoring.is.not.supported.in.the.current.context={0} refactoring is not supported in the current context
anonymous.class.text=Anonymous class
inline.to.anonymous.no.abstract=Abstract classes cannot be inlined
replace.method.code.duplicates.title=Replace Code Duplicates
interface.has.been.successfully.created=Interface {0} has been successfully created
there.are.multiple.exit.points.in.the.selected.code.fragment=There are multiple exit points in the selected code fragment
rename.bound.forms=Rename bound &forms
caller.chooser.callee.method=Callee Method
package.does.not.exist=Package {0} does not exist.\nDo you want to create it?
move.inner.to.upper.level.title=Move Inner to Upper Level
only.fields.variables.of.methods.of.valid.type.can.be.considered=Only fields, variables, method parameters\\ua0or methods of valid type can be considered.
inline.parameter.replace.with.local.checkbox=R&eplace with local variable
0.is.already.overridden.in.1={0} is already overridden in {1}. Method will not be pushed down to that class.
superclass.cannot.be.extracted.from.an.interface=Superclass cannot be extracted from interface
rename.parameters.hierarchy=Rename parameters in hier&archy
renamed.class.will.hide.0.in.1=Renamed class will hide {0} in {1}
replace.all.occurrences.of.expression.0.occurrences=Replace &all occurrences ({0})
inline.parameter.error.hierarchy=Inline parameter is not supported when method is a part of inheritance hierarchy
parameter.of.type=Parameter of &type\:
package.for.new.interface=&Package for new interface\:
no.selection=No selection.
ignore.button=Ignore
0.will.not.be.accessible.from.1.after.inlining={0} will not be accessible from {1} after inlining
select.source.root.chooser.title=Select Source Root
move.classes.move.to.another.source.folder=Move to another source &folder
class.constructors.radio=Class &constructor(s)
invert.0.1=Invert {0} {1} and its usages
class.0.does.not.exist=Class {0} does not exist.\nDo you want to create it?
continue.button=&Continue
rename.project.action.title=Rename Project...
parameter.name.prompt=Parameter na&me\:
encapsulate.fields.options.border.title=Options
0.referenced.in.1.will.not.be.accessible.from.production.of.module.2={0}, referenced in {1}, will not be accessible from the production sources of module {2}
press.the.do.migrate.button=Press the "Do Migrate" button at the bottom of the search results panel\nto migrate using the migration map "{0}"\n
preview.button=&Preview
references.in.code.to.elements.from.migration.map=References in code to elements from migration map "{0}" {1}
extract.interface.title=Extract Interface
copy.class.clone.0.1=Clone {0} {1}
directory.0.already.contains.a.file.named.1=Directory {0} \nalready contains a file named ''{1}''
0.has.1.usages.that.are.not.safe.to.delete={0} has {1,choice,1\#1 usage that is|2\#{1,number} usages that are} not safe to delete.
occurences.string=({0,choice,1\#1 occurrence|2\#{0,number} occurrences})
class.does.not.exist.in.the.project=Class does not exist in project. Do you want to create it?
move.directories=Move &all
move.specified.elements=Move specified elements
readonly.occurences.found=Occurrences found in read-only files
changeSignature.no.type.for.exception=Specify type for exception
references.to.be.changed=References to be changed {0}
move.specified.classes.to=Move specified classes to\:
package.description=package {0}
move.classes.elements.header=Classes to be moved to {0}
declare.final=Declare &final
type.migration.exclude.action.text=&Exclude
move.method.is.not.supported.for.generic.classes=Move method is not supported for generic classes
class.0.is.not.accessible.from.target.1=Class {0} is not accessible from target {1}
changeClassSignature.class.label.text=Change signature of {0}
automatic.renamer.rename.to.column=Rename To
introduce.field.field.of.type=Field of &type\:
inline.local.variable.definition.prompt=Inline local variable ''{0}'' definition?
no.new.name.specified=No new name specified
refactoring.is.not.supported.for.recursive.methods={0} refactoring may not be applied to remove recursive methods.\nYou can inline only individual method calls.
use.super.references.prompt=At this stage {0} can analyze usages of {1} \nand replace them with usages of {2} where possible.\nDo you want to proceed?
declare.folded.parameters=&Fold parameters
copy,handler.clone.files.directories=Clone files/directories
no.usages.can.be.replaced=No usages of {0} \ncan be replaced with usages of {1}
invalid.target.package.name.specified=Invalid target package name specified
field.0.is.never.used=Field {0} is never used
unused.overriding.methods.title=Unused Overriding Methods
members.to.be.moved.should.belong.to.the.same.class=Members to be moved should belong to the same class
0.referenced.in.1.will.not.be.accessible.from.module.2={0}, referenced in {1}, will not be accessible from module {2}
method.description=method {0}
copy.files.clone.directory.0=Clone directory {0}
0.is.located.in.a.jar.file={0} is located in a jar file.\n
what.would.you.like.to.do=What would you like to do?
comments.elements.header=Occurrences found in comments, strings and non-code files {0}
select.migration.map=Select migration map\:
use.interface.where.possible.title=Use Interface Where Possible
replace.default.constructor.of.0.with.a.factory.method=Replace default constructor of {0} with a factory method
move.classes.command=Moving {0} to package {1}
the.caret.should.be.positioned.on.the.included.file.to.inline=Caret should be positioned on the included file reference to inline
replace.fragment=Replace Fragment
changeSignature.propagate.parameters.title=Propa&gate Parameters...
references.in.code.to.0=References in code to {0}
please.enter.a.valid.name.for.inverted.element=Please enter a valid name for inverted {0}
there.is.already.a.0.it.will.conflict.with.the.renamed.1=There is already a {0}. It will conflict with the renamed {1}
class.name.prompt=Class &name\:
replace.this.code.fragment=Replace this code fragment?
getter.and.setter.methods.found.for.the.field.0=Getter and setter methods found for the field {0}. \n{1} them as well?
refactoring.introduce.context.error=Cannot perform refactoring in this context
type.cook.perform.exhaustive.search=Perform &exhaustive search
move.instance.method.command=Move Instance method
delegate.members=Delegate mem&bers
extract.subclass.command=Extract Subclass
use.variable.initializer.to.initialize.parameter=Use variable &initializer to initialize parameter
inline.variable.title=Inline Variable
method.does.not.have.a.body=Method {0} does not have a body
usages.detected=Usages Detected
move.method.is.not.supported.for.0=Move instance method is not supported for {0}
move.enum.constant.cb=Move as &enum constants if possible
select.target.directory.description=The file will be created in this directory
enter.new.project.name=\u8F93\u5165\u65B0\u7684\u9879\u76EE\u540D\uFF1A
is.modified.in.loop.body={0} is modified in loop body
remove.duplicates.command=Remove Duplicates
remove.include.prompt=Included file is no longer used. Remove it?
rename.package.button.text=Rename &package
move.package.to.another.package=Move &package ''{0}'' to another package
occurrences.found.in.comments.strings.and.non.java.files=Occurrences found in comments, strings and non-code files
attempting.to.delete.targets.node.text=Attempting to delete
error.wrong.caret.position.symbol.to.rename=Caret should be positioned at symbol to be renamed
convertToInstanceMethod.no.parameters.with.reference.type=There are no parameters that have reference type
encapsulate.fields.refactoring.cannot.be.applied.to.interface=Encapsulate fields refactoring cannot be applied to interface
static.initializer.description=static initializer of class {0}
changeClassSignature.parameters.panel.border.title=Parameters
edit.migration.map.title=Edit Migration Map
field.0.is.not.accessible=Field {0} is not accessible from {1}
extract.interface.command.name=Extracting interface {0} from {1}
name.prompt=&Name
cannot.replace.temp.with.query.in.interface=Cannot replace temp with query in interface
convert.local.to.field.title=Convert Local to Field
renaming.something=Renaming something
extract.method.control.flow.analysis.failed=Code contains syntax errors. Cannot perform necessary analysis.
migration.map.description.label=Map description\:
error.cannot.be.renamed=This element cannot be renamed
move.packages.to.another.package=Move {0} &packages to another package
pull.members.up.title=Pull Members Up
javadoc.for.abstracts=JavaDoc for abstracts
choose.destination.directory=Choose Destination Directory
view.usages=&View usages
element.will.no.longer.be.accessible={0} will no longer be accessible from {1}
copy.files.copy.title=Copy
replace.write.access.occurrences=Rep&lace write access occurrences
rename.directory.title=Rename &Directory
inline.method.checking.tail.calls.progress=Checking tail call usages
constructor.cannot.be.made.static=Constructor cannot be made static
setup.method.radio=&setUp method
0.already.contains.field.1={0} already contains field {1}
initializer.for.variable.cannot.be.a.constant.initializer=Initializer for variable {0} cannot be a constant initializer
copy.files.copy.specified.files.label=Copy specified files
rename.current.directory=Rename &current
retry.command=Retry
refactor.button=&Refactor
there.are.multiple.output.values.for.the.selected.code.fragment=There are multiple output values for the selected code fragment\:
search.for.text.occurrences=Search for &text occurrences
0.uses.1.of.an.instance.of.a.2={0} uses {1} of an instance of a {2}
selection.does.not.form.a.fragment.for.extraction=Selection does not form a fragment for extraction
delete.include.command=Delete {0}
visibility.package.local=Pac&kage local
turnRefsToSuper.use.superclass.in.instanceof=&Use interface/superclass in instanceof
make.static.command=Making {0} static
cannot.move.package.into.itself=Cannot move package into itself
extract.method.method.panel.border=Method
move.directory.0=Move directory {0}
no.field.name.specified=No field name specified
push.members.from.0.down.label=Push members from {0} down
move.nonstatic.class.from.jsp.not.supported=Moving non-static classes from JSP page is not supported
move.directories.elements.header=Directories to be moved to {0}
yes.button=&Yes
